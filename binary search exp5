#include <stdio.h>
#include <stdlib.h>

int binarySearch(int arr[], int size, int target) {
    int left = 0, right = size - 1;

    while (left <= right) {
        int mid = (left + right) / 2;

        if (arr[mid] == target) {
            return mid + 1;  // Position (1-based)
        }
        if (arr[mid] < target) {
            left = mid + 1;
        } else {
            right = mid - 1;
        }
    }

    return -1;
}

int main() {
    int size, target;

    printf("Enter size of the array: ");
    scanf("%d", &size);

    int *arr = (int *)malloc(size * sizeof(int));
    if (arr == NULL) {
        printf("Memory allocation failed.\n");
        return 1;
    }

    printf("Enter %d sorted elements (ascending order):\n", size);
    for (int i = 0; i < size; i++) {
        printf("Element %d: ", i + 1);
        scanf("%d", &arr[i]);
    }

    printf("Enter the element to search for: ");
    scanf("%d", &target);

    int result = binarySearch(arr, size, target);

    if (result != -1) {
        printf("Element found at position %d (1-based index)\n", result);
    } else {
        printf("Element not found in the array.\n");
    }

    free(arr);
    return 0;
}


op-
Enter size of the array: 5
Enter 5 sorted elements (ascending order):
Element 1: 12
Element 2: 13
Element 3: 14
Element 4: 15
Element 5: 16
Enter the element to search for: 14
Element found at position 3 (1-based index)


=== Code Execution Successful ===
