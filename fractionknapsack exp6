#include <stdio.h>
#include <stdlib.h>

struct Item {
    int weight;
    int profit;
    float ratio;
};

// Compare function for sorting items by descending profit/weight ratio
int compare(const void *a, const void *b) {
    struct Item *item1 = (struct Item *)a;
    struct Item *item2 = (struct Item *)b;

    if (item2->ratio > item1->ratio)
        return 1;
    else if (item2->ratio < item1->ratio)
        return -1;
    return 0;
}

// Function to calculate maximum profit for fractional knapsack
float fractionalKnapsack(int capacity, struct Item *items, int n) {
    qsort(items, n, sizeof(items[0]), compare);

    float totalProfit = 0.0;
    int remainingCapacity = capacity;

    for (int i = 0; i < n && remainingCapacity > 0; i++) {
        if (items[i].weight <= remainingCapacity) {
            totalProfit += items[i].profit;
            remainingCapacity -= items[i].weight;
        } else {
            totalProfit += items[i].profit * ((float)remainingCapacity / items[i].weight);
            break;
        }
    }

    return totalProfit;
}

int main() {
    int n, capacity;

    printf("Enter the number of items: ");
    scanf("%d", &n);

    printf("Enter the capacity of the knapsack: ");
    scanf("%d", &capacity);

    struct Item *items = (struct Item *)malloc(n * sizeof(struct Item));
    if (items == NULL) {
        printf("Memory allocation failed!\n");
        return 1;
    }

    for (int i = 0; i < n; i++) {
        printf("Enter profit and weight for item %d: ", i + 1);
        scanf("%d %d", &items[i].profit, &items[i].weight);
        items[i].ratio = (float)items[i].profit / items[i].weight;
    }

    float maxProfit = fractionalKnapsack(capacity, items, n);
    printf("Maximum profit that can be obtained: %.2f\n", maxProfit);

    free(items);
    return 0;
}


op-
Enter the number of items: 5
Enter the capacity of the knapsack: 60
Enter profit and weight for item 1: 15
23
Enter profit and weight for item 2: 34 65
Enter profit and weight for item 3: 37
67
Enter profit and weight for item 4: 28 87
Enter profit and weight for item 5: 98 45
Maximum profit that can be obtained: 107.78
